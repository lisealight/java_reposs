/*
 * This file is generated by jOOQ.
 */
package ru.tinkoff.edu.java.scrapper.domain.jooq.tables.pojos;


import java.beans.ConstructorProperties;
import java.io.Serializable;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.Nullable;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.17.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChatLinks implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long chat;
    private Long linkId;

    public ChatLinks() {}

    public ChatLinks(ChatLinks value) {
        this.chat = value.chat;
        this.linkId = value.linkId;
    }

    @ConstructorProperties({ "chat", "linkId" })
    public ChatLinks(
        @Nullable Long chat,
        @Nullable Long linkId
    ) {
        this.chat = chat;
        this.linkId = linkId;
    }

    /**
     * Getter for <code>public.chat_links.chat</code>.
     */
    @Nullable
    public Long getChat() {
        return this.chat;
    }

    /**
     * Setter for <code>public.chat_links.chat</code>.
     */
    public void setChat(@Nullable Long chat) {
        this.chat = chat;
    }

    /**
     * Getter for <code>public.chat_links.link_id</code>.
     */
    @Nullable
    public Long getLinkId() {
        return this.linkId;
    }

    /**
     * Setter for <code>public.chat_links.link_id</code>.
     */
    public void setLinkId(@Nullable Long linkId) {
        this.linkId = linkId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ChatLinks other = (ChatLinks) obj;
        if (this.chat == null) {
            if (other.chat != null)
                return false;
        }
        else if (!this.chat.equals(other.chat))
            return false;
        if (this.linkId == null) {
            if (other.linkId != null)
                return false;
        }
        else if (!this.linkId.equals(other.linkId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.chat == null) ? 0 : this.chat.hashCode());
        result = prime * result + ((this.linkId == null) ? 0 : this.linkId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ChatLinks (");

        sb.append(chat);
        sb.append(", ").append(linkId);

        sb.append(")");
        return sb.toString();
    }
}
