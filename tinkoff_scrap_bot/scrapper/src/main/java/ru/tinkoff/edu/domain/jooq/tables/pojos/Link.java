/*
 * This file is generated by jOOQ.
 */
package ru.tinkoff.edu.domain.jooq.tables.pojos;


import jakarta.validation.constraints.Size;

import java.beans.ConstructorProperties;
import java.io.Serializable;
import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.17.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Link implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private String link;
    private LocalDateTime lastUpdate;
    private LocalDateTime lastActivity;
    private Integer openIssuesCount;
    private Integer answerCount;

    public Link() {}

    public Link(Link value) {
        this.id = value.id;
        this.link = value.link;
        this.lastUpdate = value.lastUpdate;
        this.lastActivity = value.lastActivity;
        this.openIssuesCount = value.openIssuesCount;
        this.answerCount = value.answerCount;
    }

    @ConstructorProperties({ "id", "link", "lastUpdate", "lastActivity", "openIssuesCount", "answerCount" })
    public Link(
        @NotNull Long id,
        @NotNull String link,
        @NotNull LocalDateTime lastUpdate,
        @NotNull LocalDateTime lastActivity,
        @Nullable Integer openIssuesCount,
        @Nullable Integer answerCount
    ) {
        this.id = id;
        this.link = link;
        this.lastUpdate = lastUpdate;
        this.lastActivity = lastActivity;
        this.openIssuesCount = openIssuesCount;
        this.answerCount = answerCount;
    }

    /**
     * Getter for <code>LINK.ID</code>.
     */
    @NotNull
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>LINK.ID</code>.
     */
    public void setId(@NotNull Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>LINK.LINK</code>.
     */
    @jakarta.validation.constraints.NotNull
    @Size(max = 1000000000)
    @NotNull
    public String getLink() {
        return this.link;
    }

    /**
     * Setter for <code>LINK.LINK</code>.
     */
    public void setLink(@NotNull String link) {
        this.link = link;
    }

    /**
     * Getter for <code>LINK.LAST_UPDATE</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public LocalDateTime getLastUpdate() {
        return this.lastUpdate;
    }

    /**
     * Setter for <code>LINK.LAST_UPDATE</code>.
     */
    public void setLastUpdate(@NotNull LocalDateTime lastUpdate) {
        this.lastUpdate = lastUpdate;
    }

    /**
     * Getter for <code>LINK.LAST_ACTIVITY</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public LocalDateTime getLastActivity() {
        return this.lastActivity;
    }

    /**
     * Setter for <code>LINK.LAST_ACTIVITY</code>.
     */
    public void setLastActivity(@NotNull LocalDateTime lastActivity) {
        this.lastActivity = lastActivity;
    }

    /**
     * Getter for <code>LINK.OPEN_ISSUES_COUNT</code>.
     */
    @Nullable
    public Integer getOpenIssuesCount() {
        return this.openIssuesCount;
    }

    /**
     * Setter for <code>LINK.OPEN_ISSUES_COUNT</code>.
     */
    public void setOpenIssuesCount(@Nullable Integer openIssuesCount) {
        this.openIssuesCount = openIssuesCount;
    }

    /**
     * Getter for <code>LINK.ANSWER_COUNT</code>.
     */
    @Nullable
    public Integer getAnswerCount() {
        return this.answerCount;
    }

    /**
     * Setter for <code>LINK.ANSWER_COUNT</code>.
     */
    public void setAnswerCount(@Nullable Integer answerCount) {
        this.answerCount = answerCount;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Link other = (Link) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.link == null) {
            if (other.link != null)
                return false;
        }
        else if (!this.link.equals(other.link))
            return false;
        if (this.lastUpdate == null) {
            if (other.lastUpdate != null)
                return false;
        }
        else if (!this.lastUpdate.equals(other.lastUpdate))
            return false;
        if (this.lastActivity == null) {
            if (other.lastActivity != null)
                return false;
        }
        else if (!this.lastActivity.equals(other.lastActivity))
            return false;
        if (this.openIssuesCount == null) {
            if (other.openIssuesCount != null)
                return false;
        }
        else if (!this.openIssuesCount.equals(other.openIssuesCount))
            return false;
        if (this.answerCount == null) {
            if (other.answerCount != null)
                return false;
        }
        else if (!this.answerCount.equals(other.answerCount))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.link == null) ? 0 : this.link.hashCode());
        result = prime * result + ((this.lastUpdate == null) ? 0 : this.lastUpdate.hashCode());
        result = prime * result + ((this.lastActivity == null) ? 0 : this.lastActivity.hashCode());
        result = prime * result + ((this.openIssuesCount == null) ? 0 : this.openIssuesCount.hashCode());
        result = prime * result + ((this.answerCount == null) ? 0 : this.answerCount.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Link (");

        sb.append(id);
        sb.append(", ").append(link);
        sb.append(", ").append(lastUpdate);
        sb.append(", ").append(lastActivity);
        sb.append(", ").append(openIssuesCount);
        sb.append(", ").append(answerCount);

        sb.append(")");
        return sb.toString();
    }
}
